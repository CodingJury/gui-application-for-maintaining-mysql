import java.awt.Color;
import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * databases.java
 *
 * Created on Oct 21, 2020, 4:25:51 AM
 */

/**
 *
 * @author Amit
 */
public class frmAlterTable extends javax.swing.JFrame {

    /** Creates new form databases */
    public frmAlterTable() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonBack = new javax.swing.JButton();
        jLabelDirectory = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonAdd = new javax.swing.JButton();
        jButtonModify = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldColumnName = new javax.swing.JTextField();
        jComboBoxColumnType = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldColumnSize = new javax.swing.JTextField();
        jCheckBoxColumnNotNull = new javax.swing.JCheckBox();
        jComboBoxColumnKey = new javax.swing.JComboBox();
        jTextFieldColumnDefault = new javax.swing.JTextField();
        jComboBoxColumnExtra = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButtonDrop = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();
        jButtonUp = new javax.swing.JButton();
        jButtonDown = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxColumnPosition = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Field", "Type", "Null", "Key", "Default", "Extra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jLabelDirectory.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelDirectory.setText("localhost > Database > ");

        jButtonAdd.setText("Add new column");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonModify.setText("Modify");
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jLabel1.setText("Column name :");

        jComboBoxColumnType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "INT", "VARCHAR", "CHAR" }));

        jLabel2.setText("Type :");

        jLabel3.setText("Size :");

        jComboBoxColumnKey.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "none", "PRIMARY KEY", "UNIQUE" }));

        jComboBoxColumnExtra.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "none", "AUTO_INCREMENT" }));

        jLabel4.setText("Not Null:");

        jLabel5.setText("Key :");

        jLabel6.setText("Default :");

        jLabel7.setText("Extra :");

        jButtonDrop.setText("Drop");
        jButtonDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDropActionPerformed(evt);
            }
        });

        jButtonChange.setText("Change");
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jButtonUp.setText("/\\");

            jButtonDown.setText("\\/");

            jLabel9.setText("Position :");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabelDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                    .addContainerGap())
                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonUp)
                        .addComponent(jButtonDown))
                    .addGap(23, 23, 23))
                .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonModify, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonChange, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButtonDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                    .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(32, 32, 32))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jComboBoxColumnType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldColumnSize, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(jCheckBoxColumnNotNull, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jComboBoxColumnKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldColumnDefault, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBoxColumnExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jComboBoxColumnPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabelDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(73, 73, 73)
                            .addComponent(jButtonUp)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonDown))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxColumnType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldColumnSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBoxColumnKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldColumnDefault, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxColumnPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxColumnExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jCheckBoxColumnNotNull)))
                    .addGap(35, 35, 35)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonAdd)
                        .addComponent(jButtonBack)
                        .addComponent(jButtonModify)
                        .addComponent(jButtonChange)
                        .addComponent(jButtonDrop))
                    .addGap(32, 32, 32))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    String enterUsername = null;
    String enterPassword = null;
    String useDatabase = null;
    String selectTable = null;

    int rowSelected = -1;

    int currentState = -1;  //  MODIFY 1    CHANGE 2    SLIDE  3


    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        
        frmTables tableswindowpannel=new frmTables();
        tableswindowpannel.setVisible(true);
        tableswindowpannel.useDatabase = useDatabase;
        tableswindowpannel.enterUsername = enterUsername;
        tableswindowpannel.enterPassword = enterPassword;
        this.setVisible(false);
}//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        
        String columnName = jTextFieldColumnName.getText();
        String columnType = (String)jComboBoxColumnType.getSelectedItem();
        String strcolumnSize = jTextFieldColumnSize.getText();
        if (strcolumnSize.isEmpty()) {
            strcolumnSize = "";
        }else{
            strcolumnSize = "("+strcolumnSize+")";
        }
        Boolean columnNotNull = !(jCheckBoxColumnNotNull.isSelected());
        String strcolumnNotNull;
        if (columnNotNull) {
            strcolumnNotNull = "";
        }else{
            strcolumnNotNull = "NOT NULL";
        }
        String columnKey = (String)jComboBoxColumnKey.getSelectedItem();
        if (columnKey.equals("none")) {
            columnKey = "";
        }
        String columnDefault = jTextFieldColumnDefault.getText();
        if (columnDefault.isEmpty()) {
            columnDefault = "";
        }else{
            if (columnType.equals("VARCHAR")||columnType.equals("CHAR")) {
                columnDefault = "DEFAULT \""+columnDefault+"\"";
            }else{
                columnDefault = "DEFAULT "+columnDefault;
            }
        }
        String columnExtra = (String)jComboBoxColumnExtra.getSelectedItem();
        if (columnExtra.equals("none")) {
            columnExtra = "";
        }
        String columnPosition = (String)jComboBoxColumnPosition.getSelectedItem();
        if (columnPosition.equals("LAST")) {
            columnPosition = "";
        }



        if (columnName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Column name must be present");
        }else{
            if ((columnExtra.equals("AUTO_INCREMENT"))&&(!columnType.equals("INT"))) {
                JOptionPane.showMessageDialog(null, "Auto increment must contain integer type.");
            }else{
                if ((columnType.contains("VARCHAR")&&(strcolumnSize.isEmpty()))) {
                    JOptionPane.showMessageDialog(null, "Enter the size of varchar.");
                }else{
                    if((columnExtra.equals("AUTO_INCREMENT"))&&(!columnKey.equals("PRIMARY KEY"))) {
                        JOptionPane.showMessageDialog(null, "Auto increment must contain primary key.");
                    }else{
                        if((columnExtra.equals("AUTO_INCREMENT"))&&(!columnDefault.isEmpty())) {
                            JOptionPane.showMessageDialog(null, "When auto increment is selected, then default should be empty");
                        }else{
                            String sql=null;
                            if ((rowSelected == -1)&&(currentState == -1)) {
                                sql = "ALTER TABLE "+selectTable+" ADD "+columnName+" "+columnType+" "+strcolumnSize+" "+strcolumnNotNull+" "+columnKey+" "+columnDefault+" "+columnExtra+" "+columnPosition+";";
                                System.out.println(sql);

                            }else{
                                /*///////////////////////////////////////////////
                                             modify or change or slide
                                  
                                         MODIFY 1    CHANGE 2    SLIDE  3
                                
                                 ////////////////////////////////////////////////*/
                                if (currentState == 1) { 
                                    System.out.println("add modify");
                                    sql = "ALTER TABLE "+selectTable+" MODIFY "+columnName+" "+columnType+" "+strcolumnSize+" "+strcolumnNotNull+" "+columnKey+" "+columnDefault+" "+columnExtra+" "+columnPosition+";";
                                    System.out.println(sql);
                                }else if (currentState == 2){
                                    System.out.println("add change");
                                    sql = "ALTER TABLE "+selectTable+" CHANGE "+(String)jTable1.getValueAt(rowSelected, 0)+" "+columnName+" "+columnType+" "+strcolumnSize+" "+strcolumnNotNull+" "+columnKey+" "+columnDefault+" "+columnExtra+" "+columnPosition+";";
                                    System.out.println(sql);
                                }else if (currentState == 3) {
                                    System.out.println("add slide");
                                }
                            }
                            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                            DefaultComboBoxModel model1 = (DefaultComboBoxModel)jComboBoxColumnPosition.getModel();
                            try {
                                Class.forName("com.mysql.jdbc.Driver");
                                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/"+useDatabase+"",enterUsername,enterPassword);

                                Statement stmt = con.createStatement();
                                String query1 = sql;
                                int rowAffecterd = stmt.executeUpdate(query1);
                                String query2 = "DESC "+selectTable+";";
                                ResultSet rs = stmt.executeQuery(query2);

                                model.setRowCount(0);
                                model1.removeAllElements();

                                model1.insertElementAt("FIRST", model1.getSize());
                                while(rs.next()) {
                                    model.insertRow(model.getRowCount(), new Object[] {rs.getString("Field"),rs.getString("Type"),rs.getString("Null"),rs.getString("Key"),rs.getString("Default"),rs.getString("Extra")});
                                    model1.insertElementAt("AFTER "+rs.getString("Field"), model1.getSize());
                                }
                                model1.insertElementAt("LAST", model1.getSize());

                                jComboBoxColumnPosition.setModel(model1);
                                jComboBoxColumnPosition.setSelectedItem("LAST");
                                jTable1.setModel(model);
                                rs.close();
                                stmt.close();
                                con.close();
                            }catch(Exception e) {
                                JOptionPane.showMessageDialog(null, e.getMessage(),"Error in adding alter query ",JOptionPane.ERROR_MESSAGE);
                            }


                            //-----RESETING ALL VARIABLES------------------------
                            jLabel1.setText("Column name :");
                            jLabel1.setForeground(Color.BLACK);
                            jButtonAdd.setText("Add new column");
                            jTextFieldColumnName.setEditable(true);
                            rowSelected = -1;    //RESETING SELECTED ROW
                            currentState = -1;   //RESETING CURRENT STATE


                            //------clearing all fields----------------------------
                            jTextFieldColumnName.setText("");
                            jComboBoxColumnType.setSelectedIndex(0);
                            jTextFieldColumnSize.setText("");
                            jCheckBoxColumnNotNull.setSelected(false);
                            jComboBoxColumnKey.setSelectedIndex(0);
                            jTextFieldColumnDefault.setText("");
                            jComboBoxColumnExtra.setSelectedIndex(0);
                            jComboBoxColumnPosition.setSelectedItem("LAST");

                        }
                    }
                }
            }
        }
}//GEN-LAST:event_jButtonAddActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        jLabelDirectory.setText(""+jLabelDirectory.getText()+""+useDatabase+" > "+selectTable+" [Altering table]");

        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        DefaultComboBoxModel model1 = (DefaultComboBoxModel)jComboBoxColumnPosition.getModel();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/"+useDatabase+"",enterUsername,enterPassword);

            Statement stmt = con.createStatement();
            String query = "DESC "+selectTable+";";
            ResultSet rs = stmt.executeQuery(query);

            model.setRowCount(0);
            model1.removeAllElements();

            model1.insertElementAt("FIRST", model1.getSize());
            while(rs.next()) {
                String columnName = rs.getString("Field");
                String columnType = rs.getString("Type");
                String columnNull = rs.getString("Null");
                String columnKey = rs.getString("Key");
                String columnDefault = rs.getString("Default");
                String columnExtra = rs.getString("Extra");
                model.insertRow(model.getRowCount(), new Object[] {columnName,columnType,columnNull,columnKey,columnDefault,columnExtra});
                model1.insertElementAt("AFTER "+columnName, model1.getSize());
            }
            model1.insertElementAt("LAST", model1.getSize());

            jComboBoxColumnPosition.setModel(model1);
            jComboBoxColumnPosition.setSelectedItem("LAST");
            jTable1.setModel(model);
            rs.close();
            stmt.close();
            con.close();
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),"Error in initially opeaning alter page ",JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_formWindowOpened

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        
        if (currentState == 1) {  //  MODIFY 1    CHANGE 2    SLIDE  3
            System.out.println("You are already modifing one row, please mofidy it first");
        }else if (currentState == 2) {
            System.out.println("You are changing the column field, do it first");
        }else if (currentState == 3) {
            System.out.println("You are slidiing the column field up and down, do it first");
        }else{
            int r = jTable1.getSelectedRow();

            if (r == -1) {
                JOptionPane.showMessageDialog(null, "Please select the table row to modify");
            }else{
                jButtonAdd.setText("Add mofification");  // changing text of ADD BUTTON
                jTextFieldColumnName.setEditable(false); // in modification only definition is modified

                jTextFieldColumnName.setText((String)jTable1.getValueAt(r,0));


                String typeplussize = (String)jTable1.getValueAt(r, 1);
                int start = typeplussize.indexOf("(");
                int last = typeplussize.indexOf(")");
                String strtype = typeplussize.substring(0, start);
                if (strtype.equals("int")) {
                    strtype = "INT";
                }else if (strtype.equals("varchar")) {
                    strtype = "VARCHAR";
                }else if (strtype.equals("char")) {
                    strtype = "CHAR";
                }
                jComboBoxColumnType.setSelectedItem(strtype);
                jTextFieldColumnSize.setText(typeplussize.substring(start+1, last));

                String strNotNull = (String)jTable1.getValueAt(r, 2);
                Boolean boolNotNull;
                if (strNotNull.equals("YES")) {
                    boolNotNull = !true;
                }else{
                    boolNotNull = !false;
                }
                jCheckBoxColumnNotNull.setSelected(boolNotNull);
                String strcolumnKey = (String)jTable1.getValueAt(r, 3);
                System.out.println("asd"+strcolumnKey);
                if(strcolumnKey.equals("PRI")){
                    strcolumnKey = "PRIMARY KEY";
                }else if (strcolumnKey.equals("UNI")) {
                    strcolumnKey = "UNIQUE";
                }else{
                    strcolumnKey = "none";
                }
                jComboBoxColumnKey.setSelectedItem(strcolumnKey);
                jTextFieldColumnDefault.setText((String)jTable1.getValueAt(r,4));
                String strcolumnExtra = (String)jTable1.getValueAt(r,5);
                if (strcolumnExtra.equals("auto_increment")) {
                    strcolumnExtra = "AUTO_INCREMENT";
                }else{
                    strcolumnExtra = "none";
                }
                jComboBoxColumnExtra.setSelectedItem(strcolumnExtra);

                rowSelected = r;
                currentState = 1;  //  MODIFY 1    CHANGE 2    SLIDE  3

                System.out.println(rowSelected);
                System.out.println(currentState);
            }

        }



        
}//GEN-LAST:event_jButtonModifyActionPerformed

    private void jButtonDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDropActionPerformed
        
        if (currentState == 1) {  //  MODIFY 1    CHANGE 2    SLIDE  3
            System.out.println("Do not delete while modifying");
        }else if (currentState == 2) {
            System.out.println("Do not delete while changing");
        }else if (currentState == 3) {
            System.out.println("Do not delete while sliding");
        }else{
            int r = jTable1.getSelectedRow();
            if (r == -1) {
                JOptionPane.showMessageDialog(null, "Please select the table row to delete");
            }else{
                int option = JOptionPane.showConfirmDialog(null, "Do you really want to delete table row : ","Delete Table row",JOptionPane.YES_NO_OPTION,JOptionPane.ERROR_MESSAGE);
                if (option == 0){
                    System.out.println("table row dropped");

                    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    DefaultComboBoxModel model1 = (DefaultComboBoxModel)jComboBoxColumnPosition.getModel();
                    try {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/"+useDatabase+"",enterUsername,enterPassword);

                        Statement stmt = con.createStatement();
                        String query1 = "ALTER TABLE "+selectTable+" DROP "+jTable1.getValueAt(jTable1.getSelectedRow(), 0)+";";
                        int rowAffected = stmt.executeUpdate(query1);
                        String query2 = "DESC "+selectTable+";";
                        ResultSet rs = stmt.executeQuery(query2);

                        model.setRowCount(0);
                        model1.removeAllElements();

                        model1.insertElementAt("FIRST", model1.getSize());
                        while(rs.next()) {
                            String columnName = rs.getString("Field");
                            String columnType = rs.getString("Type");
                            String columnNull = rs.getString("Null");
                            String columnKey = rs.getString("Key");
                            String columnDefault = rs.getString("Default");
                            String columnExtra = rs.getString("Extra");
                            model.insertRow(model.getRowCount(), new Object[] {columnName,columnType,columnNull,columnKey,columnDefault,columnExtra});
                            model1.insertElementAt("AFTER "+columnName, model1.getSize());
                        }
                        model1.insertElementAt("LAST", model1.getSize());

                        jComboBoxColumnPosition.setModel(model1);
                        jComboBoxColumnPosition.setSelectedItem("LAST");
                        jTable1.setModel(model);
                        rs.close();
                        stmt.close();
                        con.close();
                    }catch(Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage(),"Error in deleting row ",JOptionPane.ERROR_MESSAGE);
                    }
                }

            }
        }
}//GEN-LAST:event_jButtonDropActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        
        if (currentState == 1) {  //  MODIFY 1    CHANGE 2    SLIDE  3
            System.out.println("You are modifying the column field, do it first");
        }else if (currentState == 2) {
            System.out.println("You are already changing one row, please change it first");
        }else if (currentState == 3) {
            System.out.println("You are slidiing the column field up and down, do it first");
        }else{
            int r = jTable1.getSelectedRow();

            if (r == -1) {
                JOptionPane.showMessageDialog(null, "Please select the table row to change");
            }else{
                jButtonAdd.setText("Add changement");  // changing text of ADD BUTTON
                jLabel1.setText("New column name :");
                jLabel1.setForeground(Color.GREEN);
//                jTextFieldColumnName.setEditable(false); // in modification only definition is modified


                jTextFieldColumnName.setText((String)jTable1.getValueAt(r,0));

                String typeplussize = (String)jTable1.getValueAt(r, 1);
                int start = typeplussize.indexOf("(");
                int last = typeplussize.indexOf(")");
                jComboBoxColumnType.setSelectedItem(typeplussize.substring(0, start));
                jTextFieldColumnSize.setText(typeplussize.substring(start+1, last));

                String strNotNull = (String)jTable1.getValueAt(r, 2);
                Boolean boolNotNull;
                if (strNotNull.equals("YES")) {
                    boolNotNull = !true;
                }else{
                    boolNotNull = !false;
                }
                jCheckBoxColumnNotNull.setSelected(boolNotNull);
                jComboBoxColumnKey.setSelectedItem((String)jTable1.getValueAt(r,3));
                jTextFieldColumnDefault.setText((String)jTable1.getValueAt(r,4));
                jComboBoxColumnExtra.setSelectedItem((String)jTable1.getValueAt(r,5));

                rowSelected = r;
                currentState = 2;  //  MODIFY 1    CHANGE 2    SLIDE  3

                System.out.println(rowSelected);
                System.out.println(currentState);
            }

        }
        
}//GEN-LAST:event_jButtonChangeActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDatabases().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonDown;
    private javax.swing.JButton jButtonDrop;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JButton jButtonUp;
    private javax.swing.JCheckBox jCheckBoxColumnNotNull;
    private javax.swing.JComboBox jComboBoxColumnExtra;
    private javax.swing.JComboBox jComboBoxColumnKey;
    private javax.swing.JComboBox jComboBoxColumnPosition;
    private javax.swing.JComboBox jComboBoxColumnType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDirectory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldColumnDefault;
    private javax.swing.JTextField jTextFieldColumnName;
    private javax.swing.JTextField jTextFieldColumnSize;
    // End of variables declaration//GEN-END:variables

}
